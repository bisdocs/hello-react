"use strict";(self.webpackChunklearnreact=self.webpackChunklearnreact||[]).push([[396],{8166:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var r=t(4848),o=t(8453);const a={sidebar_position:1},c="Higher Order Components",s={id:"react-patterns/highrer-order",title:"Higher Order Components",description:"The Concept",source:"@site/docs/react-patterns/highrer-order.md",sourceDirName:"react-patterns",slug:"/react-patterns/highrer-order",permalink:"/hello-react/react-patterns/highrer-order",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"React - Patterns",permalink:"/hello-react/category/react---patterns"}},i={},d=[{value:"The Concept",id:"the-concept",level:2},{value:"Usage In React",id:"usage-in-react",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"higher-order-components",children:"Higher Order Components"}),"\n",(0,r.jsx)(n.h2,{id:"the-concept",children:"The Concept"}),"\n",(0,r.jsx)(n.p,{children:"Before looking into the react components, lets see the core concept."}),"\n",(0,r.jsx)(n.p,{children:"Higher Order Function (HOF) usually takes a function as an argument and returns an function to execute."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"function operate(func, x, y) {\n    return func(x, y);\n}\n\nfunction add(a, b) {\n    return a + b;\n}\n\nfunction subtract(a, b) {\n    return a - b;\n}\n\nconsole.log(operate(add,2,3)) //prints 5\n"})}),"\n",(0,r.jsx)(n.h2,{id:"usage-in-react",children:"Usage In React"}),"\n",(0,r.jsx)(n.p,{children:"Higher-order component is a function that takes a component and returns a new component."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"It's not a react featute and more of a design pattern/technique"}),"\n",(0,r.jsx)(n.li,{children:"This emerges from compositional nature & increases reusability"}),"\n",(0,r.jsx)(n.li,{children:"higher-order component transforms a component into another component."}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"const EnhancedComponent = higherOrderComponent(WrappedComponent);\n"})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>s});var r=t(6540);const o={},a=r.createContext(o);function c(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);